{"version":3,"sources":["img/logo-panel.png","logo.svg","img/direktiv-big.png","img/dialogFlow.png","particleparams.js","App.js","reportWebVitals.js","index.js"],"names":["particleParam2","chatBubbleClasses","userText","userChatBubble","recipientText","recipientChatBubble","sessionId","uuidv4","App","useState","ssID","setSSID","isLoading","setIsLoading","inEndLoop","setInEndLoop","ended","setEnded","console","log","messages","setMessages","id","name","isTyping","lastSeenMessageId","bgImageUrl","undefined","isTypingMessage","authors","setAuthors","messagePayload","setMessagePayload","currentUser","setCurrentUser","sendToDialogFlow","useCallback","clientMsg","auth","newMsgID","length","placeHolderMessage","authorId","message","createdOn","Date","isSend","fetch","method","body","JSON","stringify","Message","headers","then","resp","json","a","Promise","r","setTimeout","respEnd","query_result","output_contexts","endsWith","respLines","fulfillment_text","split","newMessages","j","push","catch","error","newMessage","finally","context","i","initDialogFlow","onMessageSubmit","e","submitMessage","useEffect","className","style","position","top","left","width","height","zIndex","params","src","logoPanel","padding","alt","bottom","textAlign","marginLeft","fontSize","color","Ellipsis","yourAuthorId","showIsTyping","display","flexDirection","alignItems","justifyContent","Button","variant","onClick","onSubmit","preventDefault","onKeyUp","key","placeholder","disabled","value","onChange","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9c6c4c8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-panel.a3fcb134.png\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/direktiv-big.0f8c6323.png\";","export default __webpack_public_path__ + \"static/media/dialogFlow.8c463de7.png\";","export const particleParam = {\r\n    \"particles\": {\r\n      \"number\": {\r\n        \"value\": 175,\r\n        \"density\": {\r\n          \"enable\": true,\r\n          \"value_area\": 1735.01577287066\r\n        }\r\n      },\r\n      \"color\": {\r\n        \"value\": \"#00d1f7\"\r\n      },\r\n      \"shape\": {\r\n        \"type\": \"circle\",\r\n        \"stroke\": {\r\n          \"width\": 0,\r\n          \"color\": \"#000000\"\r\n        },\r\n        \"polygon\": {\r\n          \"nb_sides\": 5\r\n        },\r\n        \"image\": {\r\n          \"src\": \"img/github.svg\",\r\n          \"width\": 100,\r\n          \"height\": 100\r\n        }\r\n      },\r\n      \"opacity\": {\r\n        \"value\": 0.5,\r\n        \"random\": false,\r\n        \"anim\": {\r\n          \"enable\": false,\r\n          \"speed\": 1,\r\n          \"opacity_min\": 0.1,\r\n          \"sync\": false\r\n        }\r\n      },\r\n      \"size\": {\r\n        \"value\": 2,\r\n        \"random\": true,\r\n        \"anim\": {\r\n          \"enable\": false,\r\n          \"speed\": 40.00000000000001,\r\n          \"size_min\": 0.1,\r\n          \"sync\": false\r\n        }\r\n      },\r\n      \"line_linked\": {\r\n        \"enable\": true,\r\n        \"distance\": 150,\r\n        \"color\": \"#3c8fbf\",\r\n        \"opacity\": 1,\r\n        \"width\": 0.9994419782288222\r\n      },\r\n      \"move\": {\r\n        \"enable\": true,\r\n        \"speed\": 0.2,\r\n        \"direction\": \"none\",\r\n        \"random\": true,\r\n        \"straight\": false,\r\n        \"out_mode\": \"out\",\r\n        \"bounce\": false,\r\n        \"attract\": {\r\n          \"enable\": false,\r\n          \"rotateX\": 600,\r\n          \"rotateY\": 1200\r\n        }\r\n      }\r\n    },\r\n    \"interactivity\": {\r\n      \"detect_on\": \"canvas\",\r\n      \"events\": {\r\n        \"onhover\": {\r\n          \"enable\": false,\r\n          \"mode\": \"repulse\"\r\n        },\r\n        \"onclick\": {\r\n          \"enable\": false,\r\n          \"mode\": \"push\"\r\n        },\r\n        \"resize\": true\r\n      },\r\n      \"modes\": {\r\n        \"grab\": {\r\n          \"distance\": 400,\r\n          \"line_linked\": {\r\n            \"opacity\": 1\r\n          }\r\n        },\r\n        \"bubble\": {\r\n          \"distance\": 400,\r\n          \"size\": 40.00000000000001,\r\n          \"duration\": 2,\r\n          \"opacity\": 8,\r\n          \"speed\": 3\r\n        },\r\n        \"repulse\": {\r\n          \"distance\": 200,\r\n          \"duration\": 0.4\r\n        },\r\n        \"push\": {\r\n          \"particles_nb\": 4\r\n        },\r\n        \"remove\": {\r\n          \"particles_nb\": 2\r\n        }\r\n      }\r\n    },\r\n    \"retina_detect\": true\r\n  }\r\n\r\n  export const particleParam2 = {\r\n    \"particles\": {\r\n      \"number\": {\r\n        \"value\": 175,\r\n        \"density\": {\r\n          \"enable\": true,\r\n          \"value_area\": 1735.01577287066\r\n        }\r\n      },\r\n      \"color\": {\r\n        \"value\": \"#3d5053\"\r\n      },\r\n      \"shape\": {\r\n        \"type\": \"circle\",\r\n        \"stroke\": {\r\n          \"width\": 0,\r\n          \"color\": \"#000000\"\r\n        },\r\n        \"polygon\": {\r\n          \"nb_sides\": 5\r\n        },\r\n        \"image\": {\r\n          \"src\": \"img/github.svg\",\r\n          \"width\": 100,\r\n          \"height\": 100\r\n        }\r\n      },\r\n      \"opacity\": {\r\n        \"value\": 0.5,\r\n        \"random\": false,\r\n        \"anim\": {\r\n          \"enable\": false,\r\n          \"speed\": 1,\r\n          \"opacity_min\": 0.1,\r\n          \"sync\": false\r\n        }\r\n      },\r\n      \"size\": {\r\n        \"value\": 2,\r\n        \"random\": true,\r\n        \"anim\": {\r\n          \"enable\": false,\r\n          \"speed\": 40.00000000000001,\r\n          \"size_min\": 0.1,\r\n          \"sync\": false\r\n        }\r\n      },\r\n      \"line_linked\": {\r\n        \"enable\": true,\r\n        \"distance\": 150,\r\n        \"color\": \"#2d3032\",\r\n        \"opacity\": 1,\r\n        \"width\": 0.9994419782288222\r\n      },\r\n      \"move\": {\r\n        \"enable\": true,\r\n        \"speed\": 0.2,\r\n        \"direction\": \"none\",\r\n        \"random\": true,\r\n        \"straight\": false,\r\n        \"out_mode\": \"out\",\r\n        \"bounce\": false,\r\n        \"attract\": {\r\n          \"enable\": false,\r\n          \"rotateX\": 600,\r\n          \"rotateY\": 1200\r\n        }\r\n      }\r\n    },\r\n    \"interactivity\": {\r\n      \"detect_on\": \"canvas\",\r\n      \"events\": {\r\n        \"onhover\": {\r\n          \"enable\": false,\r\n          \"mode\": \"repulse\"\r\n        },\r\n        \"onclick\": {\r\n          \"enable\": false,\r\n          \"mode\": \"push\"\r\n        },\r\n        \"resize\": true\r\n      },\r\n      \"modes\": {\r\n        \"grab\": {\r\n          \"distance\": 400,\r\n          \"line_linked\": {\r\n            \"opacity\": 1\r\n          }\r\n        },\r\n        \"bubble\": {\r\n          \"distance\": 400,\r\n          \"size\": 40.00000000000001,\r\n          \"duration\": 2,\r\n          \"opacity\": 8,\r\n          \"speed\": 3\r\n        },\r\n        \"repulse\": {\r\n          \"distance\": 200,\r\n          \"duration\": 0.4\r\n        },\r\n        \"push\": {\r\n          \"particles_nb\": 4\r\n        },\r\n        \"remove\": {\r\n          \"particles_nb\": 2\r\n        }\r\n      }\r\n    },\r\n    \"retina_detect\": true\r\n  }","import logo from \"./logo.svg\";\nimport direktivLogo from \"./img/direktiv.png\";\nimport direktivLogoBig from \"./img/direktiv-big.png\";\nimport dialogFlowLogo from \"./img/dialogFlow.png\";\nimport logoPanel from \"./img/logo-panel.png\";\n\nimport \"./App.css\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { ChatFeed } from \"react-bell-chat\";\n\nimport Particles from \"react-particles-js\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { particleParam, particleParam2 } from \"./particleparams\";\nimport { Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { Ellipsis } from \"react-css-spinners\";\n\nconst chatBubbleClasses = {\n  userText: \"bubble-user-text\",\n  userChatBubble: \"bubble-user-bubble\",\n  recipientText: \"bubble-recipient-text\",\n  recipientChatBubble: \"bubble-recipient-bubble\",\n};\n\nconst sessionId = uuidv4();\n\nfunction App() {\n  const [ssID, setSSID] = useState(sessionId);\n  const [isLoading, setIsLoading] = useState(true);\n  const [inEndLoop, setInEndLoop] = useState(false);\n  const [ended, setEnded] = useState(false);\n  console.log(ssID);\n  const [messages, setMessages] = useState([]);\n\n  const [authors, setAuthors] = useState([\n    {\n      id: 1,\n      name: \"You\",\n      isTyping: false,\n      lastSeenMessageId: 1,\n      bgImageUrl: undefined,\n    },\n    {\n      id: 2,\n      name: \"Direktiv\",\n      isTyping: false,\n      lastSeenMessageId: 2,\n      bgImageUrl: undefined,\n      isTypingMessage: false,\n    },\n  ]);\n\n  const [messagePayload, setMessagePayload] = useState(\"\");\n\n  const [currentUser, setCurrentUser] = useState(1);\n\n  const sendToDialogFlow = useCallback(\n    (clientMsg) => {\n      setAuthors((auth) => {\n        auth[1].isTypingMessage = true;\n        return [...auth];\n      });\n\n      const newMsgID = messages.length + 1;\n      console.log(\"newMsgID =\", newMsgID);\n\n      const placeHolderMessage = {\n        id: newMsgID,\n        authorId: 2,\n        message: inEndLoop ? \"Fetching Details...\" : \"Writing Response...\",\n        createdOn: new Date(),\n        isSend: true,\n      };\n      setMessages([...messages, placeHolderMessage]);\n\n      fetch(`http://127.0.0.1:8373/${ssID}/dialogFlow/`, {\n        method: \"post\",\n        body: JSON.stringify({\n          Message: clientMsg,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((resp) => resp.json())\n        .then(async (resp) => {\n          if (inEndLoop) {\n            console.log(\"inside isEndLoop\");\n            await new Promise((r) => setTimeout(r, 10000));\n            fetch(`http://127.0.0.1:8373/${ssID}/dialogFlow/`, {\n              method: \"post\",\n              body: JSON.stringify({\n                Message: clientMsg,\n              }),\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n            })\n              .then((respEnd) => respEnd.json())\n              .then((respEnd) => {\n                // Handle Output context\n                for (const context of resp.query_result.output_contexts) {\n                  if (context.name.endsWith(\"output\")) {\n                    setEnded(true);\n                  }\n                }\n                let respLines =\n                  respEnd.query_result.fulfillment_text.split(\"\\n\");\n                let newMessages = [];\n                for (var j = 0; j < respLines.length; j++) {\n                  newMessages.push({\n                    id: newMsgID + j,\n                    authorId: 2,\n                    message: respLines[j],\n                    createdOn: new Date(),\n                    isSend: true,\n                  });\n                }\n                console.log(\"NEW ERRORR\");\n                setMessages([...messages, ...newMessages]);\n              })\n              .catch((error) => {\n                console.log(\"error =\", error);\n                const newMessage = {\n                  id: newMsgID,\n                  authorId: 2,\n                  message: `Sorry an error seemed to occur: ${error}`,\n                  createdOn: new Date(),\n                  isSend: true,\n                };\n                \n                setMessages([...messages, newMessage]);\n              })\n              .finally(() => {\n                setAuthors((auth) => {\n                  auth[1].isTypingMessage = false;\n                  return [...auth];\n                });\n                setCurrentUser(1);\n              });\n          } else {\n            // Handle Ending Loop\n            for (const context of resp.query_result.output_contexts) {\n              if (context.name.endsWith(\"gcp_end\") || context.name.endsWith(\"aws_end\")) {\n                setInEndLoop(true);\n              }\n            }\n\n            console.log(\"resp =\", resp);\n            let newMessages = [];\n            let respLines = resp.query_result.fulfillment_text.split(\"\\n\");\n            console.log(\"respLines =\", respLines);\n            for (var i = 0; i < respLines.length; i++) {\n              newMessages.push({\n                id: newMsgID + i,\n                authorId: 2,\n                message: respLines[i],\n                createdOn: new Date(),\n                isSend: true,\n              });\n            }\n            console.log(\"ERRORR\");\n            setMessages([...messages, ...newMessages]);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error =\", error);\n          const newMessage = {\n            id: newMsgID,\n            authorId: 2,\n            message: `Sorry an error seemed to occur: ${error}`,\n            createdOn: new Date(),\n            isSend: true,\n          };\n          setMessages([...messages, newMessage]);\n        })\n        .finally(() => {\n          setAuthors((auth) => {\n            auth[1].isTypingMessage = false;\n            return [...auth];\n          });\n          setCurrentUser(1);\n        });\n    },\n    [authors, messages, ssID, inEndLoop]\n  );\n\n  const initDialogFlow = useCallback(() => {\n    fetch(`http://127.0.0.1:8373/${ssID}/dialogFlow/init`, {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((resp) => resp.json())\n      .then((resp) => {\n        console.log(\"resp =\", resp);\n        const newMessage = {\n          id: 1,\n          authorId: 2,\n          message: resp.query_result.fulfillment_text,\n          createdOn: new Date(),\n          isSend: true,\n        };\n        setMessages([newMessage]);\n      })\n      .catch((error) => {\n        const newMessage = {\n          id: 1,\n          authorId: 2,\n          message: `Sorry an error seemed to occur: ${error}`,\n          createdOn: new Date(),\n          isSend: true,\n        };\n        setMessages([newMessage]);\n      })\n      .finally(() => {\n        setAuthors((auth) => {\n          auth[1].isTypingMessage = false;\n          return [...auth];\n        });\n        setCurrentUser(1);\n      });\n  }, [authors, messages, ssID]);\n\n  const onMessageSubmit = useCallback(\n    (e) => {\n      async function submitMessage() {\n        return {\n          id: messages.length + 1,\n          authorId: currentUser,\n          message: messagePayload,\n          createdOn: new Date(),\n          isSend: true,\n        };\n      }\n\n      setCurrentUser(2);\n\n      return submitMessage();\n    },\n    [messagePayload, currentUser, messages]\n  );\n\n  useEffect(() => {\n    if (!messages) {\n      return;\n    }\n\n    if (messages && messages.length == 0) {\n      initDialogFlow();\n      return;\n    }\n\n    if (messages.length > 0) {\n      setIsLoading(false);\n    }\n\n    if (messages.length > 100) {\n      console.log(\"BOTTTTLE NECK\");\n      return;\n    }\n\n    if (messages[messages.length - 1].authorId == 1) {\n      sendToDialogFlow(messages[messages.length - 1].message);\n    } else {\n      // TODO unlock text area\n    }\n  }, [messages, sendToDialogFlow]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"top\">\n        <Particles\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"1vw\",\n            height: \"1vh\",\n            zIndex: 0,\n          }}\n          params={particleParam2}\n        />\n        <div className=\"layout\">\n          <div className=\"panel info\">\n            <div className=\"info-logo\">\n              <img\n                src={logoPanel}\n                style={{ width: \"45%\", padding: \"50px\" }}\n                alt=\"Logo\"\n              />\n            </div>\n            <div className=\"info-details\">\n              <p>\n              The Direktiv Dialogflow chatbot is an online chatbot that leverages Google's 'Dialogflow' natural language processing chatbot to provide users with a simple approach to deploying online infrastructure.\n              </p>\n              <p>\n              To the right is a demo that you can use to chat with the Direktiv chatbot! It will prompt users for all of the information it requires to deploy a virtual machine instance to either Google Cloud Platform or Amazon Web Services.\n              </p>\n            </div>\n            <div style={{position: \"relative\", bottom: \"0px\", left:\"0px\", zIndex: 110, textAlign: \"start\", marginLeft: \"5px\", fontSize: \"small\", color:\"rgb(66, 67, 68)\"}}>\n              {ssID}\n            </div>\n          </div>\n          <div className=\"panel chat\">\n            <div className=\"chat-inner\">\n              {isLoading ? (\n                <div className={\"chat-loading\"}>\n                  <div>Starting Dialogflow Session</div>\n                  <Ellipsis color={\"#10a9eb\"} />\n                </div>\n              ) : (\n                <>\n                  <div className=\"chat-feed\">\n                    <div id=\"chat1\" className=\"chat-feed-inner\">\n                      <ChatFeed\n                        id=\"chat2\"\n                        messages={messages}\n                        authors={authors}\n                        yourAuthorId={1}\n                        chatBubbleClasses={chatBubbleClasses}\n                        showIsTyping={true}\n                      />\n                    </div>\n                  </div>\n                  {ended ? (\n                    <div\n                      className={\"chat-input\"}\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <div style={{ color: \"white\", height: \"30px\" }}>\n                        - Instance created, chat has ended -\n                      </div>\n                      <Button\n                        variant=\"light\"\n                        onClick={() => {\n                          setIsLoading(true);\n                          setSSID(uuidv4());\n                          setMessages([]);\n                          setInEndLoop(false);\n                          setEnded(false);\n                          setTimeout(function () {\n                            initDialogFlow();\n                          }, 5000);\n                        }}\n                      >\n                        Start A New Chat?\n                      </Button>\n                    </div>\n                  ) : (\n                    <form\n                      className=\"chat-input\"\n                      onSubmit={(e) => {\n                        onMessageSubmit(e)\n                          .then((newMessage) => {\n                            setMessages([...messages, newMessage]);\n                            setMessagePayload(\"\");\n                          })\n                          .catch((error) => {\n                            console.log(\"error =\", error);\n                          });\n                        e.preventDefault();\n                      }}\n                    >\n                      <textarea\n                        onKeyUp={(e) => {\n                          // Hard Coded session reset for debug\n                          if (e.key === \"Pause\") {\n                            setIsLoading(true);\n                            setSSID(uuidv4());\n                            setMessages([]);\n                            setInEndLoop(false);\n                            setEnded(false);\n                            setTimeout(function () {\n                              initDialogFlow();\n                            }, 5000);\n                            return;\n                          }\n                          if (e.key === \"Enter\") {\n                            onMessageSubmit(e)\n                              .then((newMessage) => {\n                                setMessages([...messages, newMessage]);\n                                setMessagePayload(\"\");\n                              })\n                              .catch((error) => {\n                                console.log(\"error =\", error);\n                              });\n                          }\n                        }}\n                        placeholder=\"Type a message...\"\n                        disabled={currentUser == 2}\n                        className={`chat-message-input ${\n                          currentUser == 1 ? \"\" : \"chat-message-input-disabled\"\n                        }`}\n                        value={messagePayload}\n                        onChange={(e) => {\n                          setMessagePayload(e.target.value);\n                        }}\n                      />\n                    </form>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}